// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using URLShortener.WebApi.Data;

#nullable disable

namespace URLShortener.WebApi.Migrations
{
    [DbContext(typeof(UrlDbContext))]
    [Migration("20230311004403_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("URLShortener.WebApi.Data.Dtos.AboutDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9190),
                            Text = "An URL shortening algorithm in ASP.NET MVC Core typically involves generating\"a shorter unique identifier for a given URL and storing it in a database. \"When a user accesses the shortened URL, the application retrieves the original URL from the database \"and redirects the user to the original URL.",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9190)
                        });
                });

            modelBuilder.Entity("URLShortener.WebApi.Data.Dtos.UrlInfoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortedString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UrlInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(8907),
                            CreatedBy = "FNBPNM QWWNUW",
                            OriginalString = "https://mail.google.com/mail/u/0/?pli=1#inbox",
                            ShortedString = "WR0kDa",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(8907)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9080),
                            CreatedBy = "XHIMLC PXEEYE",
                            OriginalString = "https://calendar.google.com/calendar/u/0/r",
                            ShortedString = "8enV2d",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9080)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9093),
                            CreatedBy = "DQRTKI OKJCKP",
                            OriginalString = "https://github.com/Maximiliyano?tab=repositories",
                            ShortedString = "LaGYOb",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9093)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9104),
                            CreatedBy = "QSHXBL DSFWKC",
                            OriginalString = "https://learnenglish.britishcouncil.org/",
                            ShortedString = "jHaWHe",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9104)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9137),
                            CreatedBy = "WJHLOM ALCCQP",
                            OriginalString = "https://www.youtube.com/",
                            ShortedString = "vFrUTd",
                            UpdatedAt = new DateTime(2023, 3, 11, 2, 44, 3, 351, DateTimeKind.Local).AddTicks(9137)
                        });
                });

            modelBuilder.Entity("URLShortener.WebApi.Data.Dtos.UserDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ndrewac@gmail.com",
                            Name = "FirstHXIZ SurDVES",
                            Password = "SGDUMD28",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "qerbzwf@gmail.com",
                            Name = "FirstPCTD SurPRJD",
                            Password = "CAJHZI68",
                            Role = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
